{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","branding","Link","to","defaultProps","About","match","params","id","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","isLoading","onDeleteClick","abrupt","delete","t0","_this2","_this$props$contact","name","email","phone","_this$state","onClick","style","cursor","classnames","fa-trash","fa-spinner fa-spin","bind","marginRight","color","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","disabled","onChange","error","htmlFor","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","newContact","preventDefault","post","history","push","_this$state2","layout_TextInputGroup","btn-light","btn-primary","EditContact","updContact","put","NotFound","Test","test","console","log","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yQAIMA,EAAS,SAAAC,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,gBACnBJ,EAAMM,UAETL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,IAAIJ,UAAU,YACrBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADf,UAIFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,eAAeJ,UAAU,YAChCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADf,SAIFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,SAASJ,UAAU,YAC1BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADf,gBAWdL,EAAOU,aAAe,CACpBH,SAAU,UAOGP,QC/BAW,EAVD,SAAAV,GACZ,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,yBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,gCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,WAAuCJ,EAAMW,MAAMC,OAAOC,+DCJ1DC,EAAUC,IAAMC,gBAChBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQZ,KAAOM,EAAOO,YAGvC,IAAK,cACH,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOO,SAAVC,OAAAN,OAAAO,EAAA,EAAAP,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASM,IACvB,SAAAJ,GAAO,OACLA,EAAQZ,KAAOM,EAAOO,QAAQb,GACzBY,EAAUN,EAAOO,QAClBD,MAGZ,QACE,OAAOP,IAIAY,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAZ,OAAAqB,EAAA,EAAArB,CAAAc,MAAAH,EAAAX,OAAAsB,EAAA,EAAAtB,CAAAS,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACErB,MAAQ,CACNK,SAAU,GACVuB,SAAU,SAAA3B,GAAM,OAAIc,EAAKc,SAAS,SAAA7B,GAAK,OAAID,EAAQC,EAAOC,OAH9Dc,EAAA,OAAAZ,OAAA2B,EAAA,EAAA3B,CAAAS,EAAAC,GAAAV,OAAA4B,EAAA,EAAA5B,CAAAS,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAA/B,OAAAgC,EAAA,EAAAhC,CAAAiC,EAAApD,EAAAqD,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAApD,EAAAwD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAOsBC,IAAMC,IAAI,8CAPhC,OAOUN,EAPVE,EAAAK,KASI7B,KAAKY,SAAS,CAAExB,SAAUkC,EAAIQ,OATlC,wBAAAN,EAAAO,SAAAV,EAAArB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAaI,OACElD,EAAAC,EAAAC,cAACW,EAAQgB,SAAT,CAAkBqB,MAAOhB,KAAKjB,OAC3BiB,KAAKnC,MAAMmE,cAfpBrC,EAAA,CAA8BsC,aAqBjBC,EAAWvD,EAAQuD,0BCmCjBC,6MAjFbpD,MAAQ,CACNqD,iBAAiB,EACjBC,WAAW,KAGbC,oDAAgB,SAAAjB,EAAO3C,EAAIiC,GAAX,OAAAQ,EAAApD,EAAAwD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACV5B,EAAKf,MAAMsD,UADD,CAAAb,EAAAE,KAAA,eAAAF,EAAAe,OAAA,wBAKdzC,EAAKc,SAAS,CAAEyB,WAAW,IALbb,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAONC,IAAMa,OAAN,8CAAAhD,OAA2Dd,IAPrD,OAAA8C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAiB,GAAAjB,EAAA,iBAUdb,EAAS,CACP1B,KAAM,iBACNM,QAASb,IAZG,yBAAA8C,EAAAO,SAAAV,EAAArB,KAAA,4IAgBP,IAAA0C,EAAA1C,KAAA2C,EAC4B3C,KAAKnC,MAAMyB,QAAtCZ,EADDiE,EACCjE,GAAIkE,EADLD,EACKC,KAAMC,EADXF,EACWE,MAAOC,EADlBH,EACkBG,MADlBC,EAEgC/C,KAAKjB,MAApCqD,EAFDW,EAECX,gBAAiBC,EAFlBU,EAEkBV,UAEzB,OACEvE,EAAAC,EAAAC,cAACkE,EAAD,KACG,SAAAlB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UACG4E,EAAM,IACP9E,EAAAC,EAAAC,cAAA,KACEC,UACEyE,EAAK3D,MAAMqD,gBAAkB,eAAiB,cAEhDY,QAAS,kBACPN,EAAK9B,SAAS,CACZwB,iBAAkBM,EAAK3D,MAAMqD,mBAGjCa,MAAO,CAAEC,OAAQ,aAEnBpF,EAAAC,EAAAC,cAAA,KACEC,UAAWkF,IAAW,8BAA+B,CACnDC,YAAaf,EACbgB,qBAAsBhB,IAExBY,MAAO,CAAEC,OAAQ,WACjBF,QAASN,EAAKJ,cAAcgB,KAAKZ,EAAMhE,EAAIiC,KAE7C7C,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAE,gBAAAmB,OAAkBd,IACxBZ,EAAAC,EAAAC,cAAA,KACEC,UAAU,gCACVgF,MAAO,CACLC,OAAQ,UACRK,YAAa,OACbC,MAAO,aAKdpB,EACCtE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UAAwC4E,GACxC/E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UAAwC6E,IAExC,eArEIb,aCqBPwB,mLAtBX,OACE3F,EAAAC,EAAAC,cAACkE,EAAD,KACG,SAAAlB,GAAS,IACA5B,EAAa4B,EAAb5B,SAER,OACEtB,EAAAC,EAAAC,cAACF,EAAAC,EAAM2F,SAAP,KACE5F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAgBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,WAA9B,SACCmB,EAASM,IAAI,SAAAJ,GAAO,OACnBxB,EAAAC,EAAAC,cAAC2F,EAAD,CACE5C,IAAKzB,EAAQZ,GACbY,QAASA,gBAbJ2C,qBCAjB2B,EAAiB,SAAAC,GASjB,IARJC,EAQID,EARJC,MACAlB,EAOIiB,EAPJjB,KACA5B,EAMI6C,EANJ7C,MACA+C,EAKIF,EALJE,YACA9E,EAII4E,EAJJ5E,KACA+E,EAGIH,EAHJG,SACAC,EAEIJ,EAFJI,SACAC,EACIL,EADJK,MAEA,OACEpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOmG,QAASvB,GAAOkB,GACvBhG,EAAAC,EAAAC,cAAA,SACEiB,KAAMA,EACNhB,UAAWkF,IAAW,eAAgB,CACpCiB,aAAcF,IAEhBtB,KAAMA,EACNoB,SAAUA,EACVD,YAAaA,EACb/C,MAAOA,EACPiD,SAAUA,IAEXC,GAASpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBiG,KAgBnDN,EAAetF,aAAe,CAC5BW,KAAM,QAGO2E,QC4EAS,6MArHbtF,MAAQ,CACN6D,KAAM,GACNC,MAAO,GACPC,MAAO,GACPwB,OAAQ,GACRjC,WAAW,KAGb4B,SAAW,SAAAM,GAAC,OAAIzE,EAAKc,SAAL1B,OAAAsF,EAAA,EAAAtF,CAAA,GAAiBqF,EAAEE,OAAO7B,KAAO2B,EAAEE,OAAOzD,WAE1D0D,+CAAW,SAAArD,EAAOV,EAAU4D,GAAjB,IAAAxB,EAAAH,EAAAC,EAAAC,EAAA6B,EAAArD,EAAA,OAAAH,EAAApD,EAAAwD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACT6C,EAAEK,kBACE9E,EAAKf,MAAMsD,UAFN,CAAAb,EAAAE,KAAA,eAAAF,EAAAe,OAAA,oBAAAQ,EAKsBjD,EAAKf,MAA5B6D,EALCG,EAKDH,KAAMC,EALLE,EAKKF,MAAOC,EALZC,EAKYD,MAGR,KAATF,EARK,CAAApB,EAAAE,KAAA,eASP5B,EAAKc,SAAS,CAAE0D,OAAQ,CAAE1B,KAAM,uBATzBpB,EAAAe,OAAA,oBAYK,KAAVM,EAZK,CAAArB,EAAAE,KAAA,gBAaP5B,EAAKc,SAAS,CAAE0D,OAAQ,CAAEzB,MAAO,wBAb1BrB,EAAAe,OAAA,qBAgBK,KAAVO,EAhBK,CAAAtB,EAAAE,KAAA,gBAiBP5B,EAAKc,SAAS,CAAE0D,OAAQ,CAAExB,MAAO,wBAjB1BtB,EAAAe,OAAA,yBAqBTzC,EAAKc,SAAS,CAAEyB,WAAW,IACrBsC,EAAa,CACjB/B,OACAC,QACAC,SAzBOtB,EAAAE,KAAA,GA4BSC,IAAMkD,KACtB,6CACAF,GA9BO,QA4BHrD,EA5BGE,EAAAK,KAgCTlB,EAAS,CACP1B,KAAM,cACNM,QAAS+B,EAAIQ,OAGfhC,EAAKc,SAAS,CACZgC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPwB,OAAQ,GACRjC,WAAW,IAGbvC,EAAKjC,MAAMiH,QAAQC,KAAK,KA7Cf,yBAAAvD,EAAAO,SAAAV,EAAArB,yIAgDF,IAAA0C,EAAA1C,KAAAgF,EAC2ChF,KAAKjB,MAA/C6D,EADDoC,EACCpC,KAAMC,EADPmC,EACOnC,MAAOC,EADdkC,EACclC,MAAOwB,EADrBU,EACqBV,OAAQjC,EAD7B2C,EAC6B3C,UAEpC,OACEvE,EAAAC,EAAAC,cAACkE,EAAD,KACG,SAAAlB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAM0G,SAAUhC,EAAKgC,SAASpB,KAAKZ,EAAM/B,IACvC7C,EAAAC,EAAAC,cAACiH,EAAD,CACEnB,MAAM,OACNlB,KAAK,OACL5B,MAAO4B,EACPoB,SAAU3B,EACV0B,YAAY,gBACZE,SAAUvB,EAAKuB,SACfC,MAAOI,EAAO1B,OAEhB9E,EAAAC,EAAAC,cAACiH,EAAD,CACEnB,MAAM,QACNlB,KAAK,QACLoB,SAAU3B,EACVrB,MAAO6B,EACPkB,YAAY,iBACZ9E,KAAK,QACLgF,SAAUvB,EAAKuB,SACfC,MAAOI,EAAOzB,QAEhB/E,EAAAC,EAAAC,cAACiH,EAAD,CACEnB,MAAM,QACNlB,KAAK,QACL5B,MAAO8B,EACPkB,SAAU3B,EACV0B,YAAY,iBACZE,SAAUvB,EAAKuB,SACfC,MAAOI,EAAOxB,QAEhBhF,EAAAC,EAAAC,cAAA,SACEiB,KAAK,SACL+B,MAAOqB,EAAY,iBAAmB,cACtC2B,SAAU3B,EACVpE,UAAWkF,IAAW,gBAAiB,CACrC+B,YAAa7C,EACb8C,eAAgB9C,kBAzGbJ,aCkIVmD,6MAjIbrG,MAAQ,CACN6D,KAAM,GACNC,MAAO,GACPC,MAAO,GACPwB,OAAQ,GACRjC,WAAW,KAiBb4B,SAAW,SAAAM,GAAC,OAAIzE,EAAKc,SAAL1B,OAAAsF,EAAA,EAAAtF,CAAA,GAAiBqF,EAAEE,OAAO7B,KAAO2B,EAAEE,OAAOzD,WAE1D0D,+CAAW,SAAArD,EAAOV,EAAU4D,GAAjB,IAAAxB,EAAAH,EAAAC,EAAAC,EAAAuC,EAAA3G,EAAA4C,EAAA,OAAAH,EAAApD,EAAAwD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACT6C,EAAEK,kBACE9E,EAAKf,MAAMsD,UAFN,CAAAb,EAAAE,KAAA,eAAAF,EAAAe,OAAA,oBAAAQ,EAKsBjD,EAAKf,MAA5B6D,EALCG,EAKDH,KAAMC,EALLE,EAKKF,MAAOC,EALZC,EAKYD,MAGR,KAATF,EARK,CAAApB,EAAAE,KAAA,eASP5B,EAAKc,SAAS,CAAE0D,OAAQ,CAAE1B,KAAM,uBATzBpB,EAAAe,OAAA,oBAYK,KAAVM,EAZK,CAAArB,EAAAE,KAAA,gBAaP5B,EAAKc,SAAS,CAAE0D,OAAQ,CAAEzB,MAAO,wBAb1BrB,EAAAe,OAAA,qBAgBK,KAAVO,EAhBK,CAAAtB,EAAAE,KAAA,gBAiBP5B,EAAKc,SAAS,CAAE0D,OAAQ,CAAExB,MAAO,wBAjB1BtB,EAAAe,OAAA,yBAqBTzC,EAAKc,SAAS,CAAEyB,WAAW,IACrBgD,EAAa,CACjBzC,OACAC,QACAC,SAEMpE,EAAOoB,EAAKjC,MAAMW,MAAMC,OAAxBC,GA3BC8C,EAAAE,KAAA,GA4BSC,IAAM2D,IAAN,8CAAA9F,OAC8Bd,GAC9C2G,GA9BO,QA4BH/D,EA5BGE,EAAAK,KAiCTlB,EAAS,CAAE1B,KAAM,iBAAkBM,QAAS+B,EAAIQ,OAEhDhC,EAAKc,SAAS,CACZgC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPwB,OAAQ,GACRjC,WAAW,IAGbvC,EAAKjC,MAAMiH,QAAQC,KAAK,KA3Cf,yBAAAvD,EAAAO,SAAAV,EAAArB,mRAfDtB,EAAOsB,KAAKnC,MAAMW,MAAMC,OAAxBC,YACUiD,IAAMC,IAAN,8CAAApC,OAC8Bd,WAD1C4C,WAGyBA,EAAIQ,KAA3Bc,SAAMC,UAAOC,UACrB9C,KAAKY,SAAS,CACZgC,OACAC,QACAC,QACAT,WAAW,uIAoDN,IAAAK,EAAA1C,KAAAgF,EAC2ChF,KAAKjB,MAA/C6D,EADDoC,EACCpC,KAAMC,EADPmC,EACOnC,MAAOC,EADdkC,EACclC,MAAOwB,EADrBU,EACqBV,OAAQjC,EAD7B2C,EAC6B3C,UAEpC,OACEvE,EAAAC,EAAAC,cAACkE,EAAD,KACG,SAAAlB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAM0G,SAAUhC,EAAKgC,SAASpB,KAAKZ,EAAM/B,IACvC7C,EAAAC,EAAAC,cAACiH,EAAD,CACEnB,MAAM,OACNlB,KAAK,OACL5B,MAAO4B,EACPoB,SAAU3B,EACV0B,YAAY,gBACZE,SAAUvB,EAAKuB,SACfC,MAAOI,EAAO1B,OAEhB9E,EAAAC,EAAAC,cAACiH,EAAD,CACEnB,MAAM,QACNlB,KAAK,QACL5B,MAAO6B,EACPmB,SAAU3B,EACV0B,YAAY,iBACZ9E,KAAK,QACLgF,SAAUvB,EAAKuB,SACfC,MAAOI,EAAOzB,QAEhB/E,EAAAC,EAAAC,cAACiH,EAAD,CACEnB,MAAM,QACNlB,KAAK,QACLoB,SAAU3B,EACVrB,MAAO8B,EACPiB,YAAY,iBACZE,SAAUvB,EAAKuB,SACfC,MAAOI,EAAOxB,QAEhBhF,EAAAC,EAAAC,cAAA,SACEiB,KAAK,SACL+B,MAAOqB,EAAY,iBAAmB,iBACtC2B,SAAU3B,EACVpE,UAAWkF,IAAW,gBAAiB,CACrC+B,YAAa7C,EACb8C,eAAgB9C,kBArHZJ,aCJXsD,EAAA,WACb,OACEzH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,OAA1B,cACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,qCCyCSuH,6MA5CbzG,MAAQ,CACN0G,KAAM,2FAINC,QAAQC,IAAI,0DA+BZ,OADAD,QAAQC,IAAI,sBAEV7H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gCAvCWiE,aCmCJ2D,0LAtBX,OACE9H,EAAAC,EAAAC,cAAC6H,EAAD,KACE/H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,KACEhI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC+H,EAAD,CAAQ5H,SAAS,oBACjBL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACgI,EAAA,EAAD,KACElI,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW3C,IACjC3F,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAW/B,IAC5CvG,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWhB,IACjDtH,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW7H,IACtCT,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWZ,IACrC1H,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOG,UAAWb,gBAdhBtD,cCHEoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShI,MACvB,2DCVNiI,IAASC,OAAO5I,EAAAC,EAAAC,cAAC2I,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e7615632.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n\nconst Header = props => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {props.branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"></i> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"></i> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"></i> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nHeader.defaultProps = {\n  branding: 'My App'\n}\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n}\n\nexport default Header\n","import React from 'react'\n\nconst About = props => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contact</p>\n      <p className=\"text-secondary\">Version {props.match.params.id}</p>\n    </div>\n  )\n}\n\nexport default About\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nconst Context = React.createContext()\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      }\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      }\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(\n          contact =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n        )\n      }\n    default:\n      return state\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  }\n\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n\n    this.setState({ contacts: res.data })\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Consumer } from '../../context'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport classnames from 'classnames'\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false,\n    isLoading: false\n  }\n\n  onDeleteClick = async (id, dispatch) => {\n    if (this.state.isLoading) {\n      return\n    }\n\n    this.setState({ isLoading: true })\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n    } catch (e) {}\n\n    dispatch({\n      type: 'DELETE_CONTACT',\n      payload: id\n    })\n  }\n\n  render() {\n    const { id, name, email, phone } = this.props.contact\n    const { showContactInfo, isLoading } = this.state\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{' '}\n                <i\n                  className={\n                    this.state.showContactInfo ? 'fas fa-minus' : 'fas fa-plus'\n                  }\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  className={classnames('fas float-right text-danger', {\n                    'fa-trash': !isLoading,\n                    'fa-spinner fa-spin': isLoading\n                  })}\n                  style={{ cursor: 'pointer' }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt float-right\"\n                    style={{\n                      cursor: 'pointer',\n                      marginRight: '1rem',\n                      color: 'black'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n}\n\nexport default Contact\n","import React, { Component } from 'react'\nimport Contact from './Contact'\nimport { Consumer } from '../../context'\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value\n\n          return (\n            <React.Fragment>\n              <h1 className=\"diplay-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\n              {contacts.map(contact => (\n                <Contact\n                  key={contact.id}\n                  contact={contact}\n                />\n              ))}\n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Contacts\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  disabled,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        className={classnames('form-control', {\n          'is-invalid': error\n        })}\n        name={name}\n        disabled={disabled}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextInputGroup\n","import React, { Component } from 'react'\nimport TextInputGroup from './../layout/TextInputGroup'\nimport { Consumer } from './../../context'\nimport axios from 'axios'\nimport classnames from 'classnames'\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {},\n    isLoading: false\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value })\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault()\n    if (this.state.isLoading) {\n      return\n    }\n    const { name, email, phone } = this.state\n\n    // validation\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required.' } })\n      return\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required.' } })\n      return\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required.' } })\n      return\n    }\n\n    this.setState({ isLoading: true })\n    const newContact = {\n      name,\n      email,\n      phone\n    }\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users',\n      newContact\n    )\n    dispatch({\n      type: 'ADD_CONTACT',\n      payload: res.data\n    })\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {},\n      isLoading: false\n    })\n\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { name, email, phone, errors, isLoading } = this.state\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    disabled={isLoading}\n                    placeholder=\"Enter Name...\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    disabled={isLoading}\n                    value={email}\n                    placeholder=\"Enter Email...\"\n                    type=\"email\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    value={phone}\n                    disabled={isLoading}\n                    placeholder=\"Enter Phone...\"\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value={isLoading ? 'Please wait...' : 'Add Contact' }\n                    disabled={isLoading}\n                    className={classnames('btn btn-block', {\n                      'btn-light': isLoading,\n                      'btn-primary': !isLoading\n                    })}\n                  />\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact\n","import React, { Component } from 'react'\nimport TextInputGroup from './../layout/TextInputGroup'\nimport { Consumer } from './../../context'\nimport axios from 'axios'\nimport classnames from 'classnames'\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {},\n    isLoading: true\n  }\n\n  async componentDidMount() {\n    const { id } = this.props.match.params\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    )\n    const { name, email, phone } = res.data\n    this.setState({\n      name,\n      email,\n      phone,\n      isLoading: false\n    })\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value })\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault()\n    if (this.state.isLoading) {\n      return\n    }\n    const { name, email, phone } = this.state\n\n    // validation\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required.' } })\n      return\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required.' } })\n      return\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required.' } })\n      return\n    }\n\n    this.setState({ isLoading: true })\n    const updContact = {\n      name,\n      email,\n      phone\n    }\n    const { id } = this.props.match.params\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    )\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data })\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {},\n      isLoading: false\n    })\n\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { name, email, phone, errors, isLoading } = this.state\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    disabled={isLoading}\n                    placeholder=\"Enter Name...\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    value={email}\n                    disabled={isLoading}\n                    placeholder=\"Enter Email...\"\n                    type=\"email\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    disabled={isLoading}\n                    value={phone}\n                    placeholder=\"Enter Phone...\"\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value={isLoading ? 'Please wait...' : 'Update Contact'}\n                    disabled={isLoading}\n                    className={classnames('btn btn-block', {\n                      'btn-light': isLoading,\n                      'btn-primary': !isLoading\n                    })}\n                  />\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Not Found</h1>\n      <p className=\"lead\">Sorry that page does not exists</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n  state = {\n    test: 'test'\n  }\n\n  componentDidMount() {\n    console.log('ComponenntDidMount...')\n  }\n\n  // componentWillMount() {\n  //   console.log('ComponentWillMount...')\n  // }\n\n  // componentDidUpdate() {\n  //   console.log('componentDidUpdate...')\n  // }\n\n  // componentWillUpdate() {\n  //   console.log('ComponentWillUpdate...')\n  // }\n\n  // componentWillReceiveProps(nextProps, nextState) {\n  //   console.log('componentWillReceiveProps...', nextProps, nextState)\n  // }\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return {\n  //     test: 'something'\n  //   }\n  // }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('getSnapshotBeforeUpdate...', prevProps, prevState)\n  // }\n\n  render() {\n    console.log('ComponentRender...')\n    return (\n      <div>\n        <h1>Test Pages</h1>\n      </div>\n    )\n  }\n}\n\nexport default Test\n","import React, { Component } from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Header from './components/layout/Header'\nimport About from './components/pages/About'\nimport Contacts from './components/contacts/Contacts'\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport { Provider } from './context'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router >\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound}/>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}